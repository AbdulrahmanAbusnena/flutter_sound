def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


android {
    /**
     * The app's namespace. Used primarily to access app resources.
     */

    namespace 'com.dooboolab.example'

    compileSdkVersion 33

    sourceSets {
             main {
            assets {
                srcDirs 'src/main/assets'
            }
        }
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        //compileSdkVersion rootProject.ext.compileSdkVersion
        //compileSdkVersion 33
 
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.dooboolab.example"
        minSdkVersion 24 // 18 works fine for the player, but the recorder needs at least 24. Speech to Text needs 21, Flutter FFmpeg needs 24
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled true // Enables code shrinking for the release build type.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // -------------------------------------------------------------------------------------
    // CAUTION: The following instruction is for developping and debugging the Flauto Engine
    // DO NOT INCLUDE THE FOLLOWING LINE IN A REAL APP !!!
    // implementation project(':flutter_sound_core')
    implementation 'com.github.canardoux:flutter_sound_core:9.3.0+4'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    // -------------------------------------------------------------------------------------

}
